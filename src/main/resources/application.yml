spring:
  application:
    name: ${SPRING_APPLICATION_NAME:image-converter-api}

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}

  docker:
    compose:
      enabled: ${SPRING_DOCKER_COMPOSE_ENABLED:false}

  devtools:
    restart:
      enabled: ${SPRING_DEVTOOLS_RESTART_ENABLED:true}

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/image-converter}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:create}
    show-sql: ${SPRING_JPA_SHOW_SQL:true}
    properties:
      hibernate:
        default_schema: ${SPRING_JPA_DEFAULT_SCHEMA:public}
        dialect: ${SPRING_JPA_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
        jdbc:
          time_zone: ${SPRING_JPA_TIME_ZONE:UTC}

  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:localhost}
    port: ${SPRING_RABBITMQ_PORT:5672}
    username: ${SPRING_RABBITMQ_USERNAME:guest}
    password: ${SPRING_RABBITMQ_PASSWORD:guest}

  data:
    redis:
      host: ${SPRING_DATA_REDIS_HOST:localhost}
      port: ${SPRING_DATA_REDIS_PORT:6379}
      password: ${SPRING_DATA_REDIS_PORT:local}

springdoc:
  api-docs:
    path: ${SPRINGDOC_API_DOCS_PATH:/v3/api-docs}
  swagger-ui:
    url: ${SPRINGDOC_SWAGGER_UI_URL:/api/v3/api-docs}
    config-url: ${SPRINGDOC_SWAGGER_UI_CONFIG_URL:/api/v3/api-docs/swagger-config}

server:
  address: ${SERVER_ADDRESS:0.0.0.0}
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${SERVER_SERVLET_CONTEXT_PATH:/api}

logging:
  level:
    org.hibernate.SQL: ${LOG_LEVEL_HIBERNATE_SQL:debug}
    org.hibernate.type.descriptor.sql.BasicBinder: ${LOG_LEVEL_HIBERNATE_BINDER:trace}

jwt:
  secret: ${JWT_SECRET:e6952c34db32e8c5e8403f92397568f2603d0bf648c70d8c9753b97358db3cdeb6cdc2dd02ac3a5def53066b3b8c1f503d2b343884d07928d28533876e011d5aac2c8f86abad9f801a7a33d3b5e3f14561e5281a3d9c590c306262e15d8fb34e3a23587af4e1441b1b6412580b2f447b648e6aec70c1ba43e880d2d5dcc71669c47c2cf8d974a0969a104c12dc29262180d88bd388afbf297e9e569182f337d5ebd5774d478eaf7658676a4994ef9bc9e9cd39b3873078d831f0f5277dc783885cb4973bfc7db695e0d2a4de83811a8487112aae9adb66d0a731a0f3d9e751ce41e27a92e60f89778472441b4565b429741a341663239a2436ab76a0d58eaf25}
  expiration-ms: ${JWT_EXPIRATION_MS:604800000}

management:
  endpoints:
    web:
      exposure:
        include: "*"

rabbitmq:
  convert:
    exchange: image.convert.exchange
    queue: image.convert.queue
    routing-key: image.convert.routingKey
    result-queue: image.convert.result.queue