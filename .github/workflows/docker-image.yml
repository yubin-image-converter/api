name: Build & Push Docker Image

# main 브랜치에 커밋/PR 병합될 때마다 실행
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/image-converter-api:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/image-converter-api:${{ github.run_number }}
          platforms: linux/amd64
#jobs:
#  build-and-push:
#    runs-on: ubuntu-latest
#
#    steps:
#      # 1) 코드 가져오기
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      # 2) 멀티-아키 지원을 위한 QEMU 설치
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#
#      # 3) docker buildx 빌더 설치
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      # 4) Docker Hub 로그인
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          registry: docker.io
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      # 5) 이미지 빌드 & 푸시
#      - name: Build and push
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          file: ./Dockerfile           # Dockerfile 경로
#          push: true                   # 빌드 후 레지스트리에 푸시
#          tags: |
#            ${{ secrets.DOCKERHUB_USERNAME }}/image-converter-api:latest
#            ${{ secrets.DOCKERHUB_USERNAME }}/image-converter-api:${{ github.run_number }}
#          platforms: linux/amd64,linux/arm64
